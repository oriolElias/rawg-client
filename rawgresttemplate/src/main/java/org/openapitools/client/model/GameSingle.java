/*
 * RAWG Video Games Database API
 *  The largest open video games database.  ### Why build on RAWG - More than 350,000 games for 50 platforms including mobiles. - Rich metadata: tags, genres, developers, publishers, individual creators, official websites, release dates, Metacritic ratings. - Where to buy: links to digital distribution services - Similar games based on visual similarity. - Player activity data: Steam average playtime and RAWG player counts and ratings. - Actively developing and constantly getting better by user contribution and our algorithms.  ### Terms of Use - Free for personal use as long as you attribute RAWG as the source of the data and/or images and add an active hyperlink from every page where the data of RAWG is used. - Free for commercial use for startups and hobby projects with not more than 100,000 monthly active users or 500,000 page views per month. If your project is larger than that, email us at [api@rawg.io](mailto:api@rawg.io) for commercial terms. - No cloning. It would not be cool if you used our API to launch a clone of RAWG. We know it is not always easy to say what is a duplicate and what isn't. Drop us a line at [api@rawg.io](mailto:api@rawg.io) if you are in doubt, and we will talk it through. - You must include an API key with every request. The key can be obtained at https://rawg.io/apidocs. If you donâ€™t provide it, we may ban your requests.  __[Read more](https://rawg.io/apidocs)__. 
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.net.URI;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.GameEsrbRating;
import org.openapitools.client.model.GamePlatformMetacritic;
import org.openapitools.client.model.GamePlatformsInner;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GameSingle
 */
@JsonPropertyOrder({
  GameSingle.JSON_PROPERTY_ID,
  GameSingle.JSON_PROPERTY_SLUG,
  GameSingle.JSON_PROPERTY_NAME,
  GameSingle.JSON_PROPERTY_NAME_ORIGINAL,
  GameSingle.JSON_PROPERTY_DESCRIPTION,
  GameSingle.JSON_PROPERTY_METACRITIC,
  GameSingle.JSON_PROPERTY_METACRITIC_PLATFORMS,
  GameSingle.JSON_PROPERTY_RELEASED,
  GameSingle.JSON_PROPERTY_TBA,
  GameSingle.JSON_PROPERTY_UPDATED,
  GameSingle.JSON_PROPERTY_BACKGROUND_IMAGE,
  GameSingle.JSON_PROPERTY_BACKGROUND_IMAGE_ADDITIONAL,
  GameSingle.JSON_PROPERTY_WEBSITE,
  GameSingle.JSON_PROPERTY_RATING,
  GameSingle.JSON_PROPERTY_RATING_TOP,
  GameSingle.JSON_PROPERTY_RATINGS,
  GameSingle.JSON_PROPERTY_REACTIONS,
  GameSingle.JSON_PROPERTY_ADDED,
  GameSingle.JSON_PROPERTY_ADDED_BY_STATUS,
  GameSingle.JSON_PROPERTY_PLAYTIME,
  GameSingle.JSON_PROPERTY_SCREENSHOTS_COUNT,
  GameSingle.JSON_PROPERTY_MOVIES_COUNT,
  GameSingle.JSON_PROPERTY_CREATORS_COUNT,
  GameSingle.JSON_PROPERTY_ACHIEVEMENTS_COUNT,
  GameSingle.JSON_PROPERTY_PARENT_ACHIEVEMENTS_COUNT,
  GameSingle.JSON_PROPERTY_REDDIT_URL,
  GameSingle.JSON_PROPERTY_REDDIT_NAME,
  GameSingle.JSON_PROPERTY_REDDIT_DESCRIPTION,
  GameSingle.JSON_PROPERTY_REDDIT_LOGO,
  GameSingle.JSON_PROPERTY_REDDIT_COUNT,
  GameSingle.JSON_PROPERTY_TWITCH_COUNT,
  GameSingle.JSON_PROPERTY_YOUTUBE_COUNT,
  GameSingle.JSON_PROPERTY_REVIEWS_TEXT_COUNT,
  GameSingle.JSON_PROPERTY_RATINGS_COUNT,
  GameSingle.JSON_PROPERTY_SUGGESTIONS_COUNT,
  GameSingle.JSON_PROPERTY_ALTERNATIVE_NAMES,
  GameSingle.JSON_PROPERTY_METACRITIC_URL,
  GameSingle.JSON_PROPERTY_PARENTS_COUNT,
  GameSingle.JSON_PROPERTY_ADDITIONS_COUNT,
  GameSingle.JSON_PROPERTY_GAME_SERIES_COUNT,
  GameSingle.JSON_PROPERTY_ESRB_RATING,
  GameSingle.JSON_PROPERTY_PLATFORMS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-16T10:31:14.408Z[UTC]")
public class GameSingle {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_SLUG = "slug";
  private String slug;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_NAME_ORIGINAL = "name_original";
  private String nameOriginal;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_METACRITIC = "metacritic";
  private Integer metacritic;

  public static final String JSON_PROPERTY_METACRITIC_PLATFORMS = "metacritic_platforms";
  private List<GamePlatformMetacritic> metacriticPlatforms = null;

  public static final String JSON_PROPERTY_RELEASED = "released";
  private LocalDate released;

  public static final String JSON_PROPERTY_TBA = "tba";
  private Boolean tba;

  public static final String JSON_PROPERTY_UPDATED = "updated";
  private OffsetDateTime updated;

  public static final String JSON_PROPERTY_BACKGROUND_IMAGE = "background_image";
  private URI backgroundImage;

  public static final String JSON_PROPERTY_BACKGROUND_IMAGE_ADDITIONAL = "background_image_additional";
  private String backgroundImageAdditional;

  public static final String JSON_PROPERTY_WEBSITE = "website";
  private URI website;

  public static final String JSON_PROPERTY_RATING = "rating";
  private BigDecimal rating;

  public static final String JSON_PROPERTY_RATING_TOP = "rating_top";
  private Integer ratingTop;

  public static final String JSON_PROPERTY_RATINGS = "ratings";
  private Object ratings;

  public static final String JSON_PROPERTY_REACTIONS = "reactions";
  private Object reactions;

  public static final String JSON_PROPERTY_ADDED = "added";
  private Integer added;

  public static final String JSON_PROPERTY_ADDED_BY_STATUS = "added_by_status";
  private Object addedByStatus;

  public static final String JSON_PROPERTY_PLAYTIME = "playtime";
  private Integer playtime;

  public static final String JSON_PROPERTY_SCREENSHOTS_COUNT = "screenshots_count";
  private Integer screenshotsCount;

  public static final String JSON_PROPERTY_MOVIES_COUNT = "movies_count";
  private Integer moviesCount;

  public static final String JSON_PROPERTY_CREATORS_COUNT = "creators_count";
  private Integer creatorsCount;

  public static final String JSON_PROPERTY_ACHIEVEMENTS_COUNT = "achievements_count";
  private Integer achievementsCount;

  public static final String JSON_PROPERTY_PARENT_ACHIEVEMENTS_COUNT = "parent_achievements_count";
  private String parentAchievementsCount;

  public static final String JSON_PROPERTY_REDDIT_URL = "reddit_url";
  private String redditUrl;

  public static final String JSON_PROPERTY_REDDIT_NAME = "reddit_name";
  private String redditName;

  public static final String JSON_PROPERTY_REDDIT_DESCRIPTION = "reddit_description";
  private String redditDescription;

  public static final String JSON_PROPERTY_REDDIT_LOGO = "reddit_logo";
  private URI redditLogo;

  public static final String JSON_PROPERTY_REDDIT_COUNT = "reddit_count";
  private Integer redditCount;

  public static final String JSON_PROPERTY_TWITCH_COUNT = "twitch_count";
  private String twitchCount;

  public static final String JSON_PROPERTY_YOUTUBE_COUNT = "youtube_count";
  private String youtubeCount;

  public static final String JSON_PROPERTY_REVIEWS_TEXT_COUNT = "reviews_text_count";
  private String reviewsTextCount;

  public static final String JSON_PROPERTY_RATINGS_COUNT = "ratings_count";
  private Integer ratingsCount;

  public static final String JSON_PROPERTY_SUGGESTIONS_COUNT = "suggestions_count";
  private Integer suggestionsCount;

  public static final String JSON_PROPERTY_ALTERNATIVE_NAMES = "alternative_names";
  private List<String> alternativeNames = null;

  public static final String JSON_PROPERTY_METACRITIC_URL = "metacritic_url";
  private String metacriticUrl;

  public static final String JSON_PROPERTY_PARENTS_COUNT = "parents_count";
  private Integer parentsCount;

  public static final String JSON_PROPERTY_ADDITIONS_COUNT = "additions_count";
  private Integer additionsCount;

  public static final String JSON_PROPERTY_GAME_SERIES_COUNT = "game_series_count";
  private Integer gameSeriesCount;

  public static final String JSON_PROPERTY_ESRB_RATING = "esrb_rating";
  private JsonNullable<GameEsrbRating> esrbRating = JsonNullable.<GameEsrbRating>undefined();

  public static final String JSON_PROPERTY_PLATFORMS = "platforms";
  private List<GamePlatformsInner> platforms = null;

  public GameSingle() {
  }

  @JsonCreator
  public GameSingle(
    @JsonProperty(JSON_PROPERTY_ID) Integer id, 
    @JsonProperty(JSON_PROPERTY_SLUG) String slug, 
    @JsonProperty(JSON_PROPERTY_NAME) String name, 
    @JsonProperty(JSON_PROPERTY_NAME_ORIGINAL) String nameOriginal, 
    @JsonProperty(JSON_PROPERTY_DESCRIPTION) String description, 
    @JsonProperty(JSON_PROPERTY_METACRITIC) Integer metacritic, 
    @JsonProperty(JSON_PROPERTY_METACRITIC_PLATFORMS) List<GamePlatformMetacritic> metacriticPlatforms, 
    @JsonProperty(JSON_PROPERTY_RELEASED) LocalDate released, 
    @JsonProperty(JSON_PROPERTY_TBA) Boolean tba, 
    @JsonProperty(JSON_PROPERTY_UPDATED) OffsetDateTime updated, 
    @JsonProperty(JSON_PROPERTY_BACKGROUND_IMAGE) URI backgroundImage, 
    @JsonProperty(JSON_PROPERTY_BACKGROUND_IMAGE_ADDITIONAL) String backgroundImageAdditional, 
    @JsonProperty(JSON_PROPERTY_WEBSITE) URI website, 
    @JsonProperty(JSON_PROPERTY_RATING_TOP) Integer ratingTop, 
    @JsonProperty(JSON_PROPERTY_RATINGS) Object ratings, 
    @JsonProperty(JSON_PROPERTY_REACTIONS) Object reactions, 
    @JsonProperty(JSON_PROPERTY_ADDED) Integer added, 
    @JsonProperty(JSON_PROPERTY_ADDED_BY_STATUS) Object addedByStatus, 
    @JsonProperty(JSON_PROPERTY_PLAYTIME) Integer playtime, 
    @JsonProperty(JSON_PROPERTY_SCREENSHOTS_COUNT) Integer screenshotsCount, 
    @JsonProperty(JSON_PROPERTY_MOVIES_COUNT) Integer moviesCount, 
    @JsonProperty(JSON_PROPERTY_CREATORS_COUNT) Integer creatorsCount, 
    @JsonProperty(JSON_PROPERTY_ACHIEVEMENTS_COUNT) Integer achievementsCount, 
    @JsonProperty(JSON_PROPERTY_PARENT_ACHIEVEMENTS_COUNT) String parentAchievementsCount, 
    @JsonProperty(JSON_PROPERTY_REDDIT_URL) String redditUrl, 
    @JsonProperty(JSON_PROPERTY_REDDIT_NAME) String redditName, 
    @JsonProperty(JSON_PROPERTY_REDDIT_DESCRIPTION) String redditDescription, 
    @JsonProperty(JSON_PROPERTY_REDDIT_LOGO) URI redditLogo, 
    @JsonProperty(JSON_PROPERTY_REDDIT_COUNT) Integer redditCount, 
    @JsonProperty(JSON_PROPERTY_TWITCH_COUNT) String twitchCount, 
    @JsonProperty(JSON_PROPERTY_YOUTUBE_COUNT) String youtubeCount, 
    @JsonProperty(JSON_PROPERTY_REVIEWS_TEXT_COUNT) String reviewsTextCount, 
    @JsonProperty(JSON_PROPERTY_RATINGS_COUNT) Integer ratingsCount, 
    @JsonProperty(JSON_PROPERTY_SUGGESTIONS_COUNT) Integer suggestionsCount, 
    @JsonProperty(JSON_PROPERTY_ALTERNATIVE_NAMES) List<String> alternativeNames, 
    @JsonProperty(JSON_PROPERTY_METACRITIC_URL) String metacriticUrl, 
    @JsonProperty(JSON_PROPERTY_PARENTS_COUNT) Integer parentsCount, 
    @JsonProperty(JSON_PROPERTY_ADDITIONS_COUNT) Integer additionsCount, 
    @JsonProperty(JSON_PROPERTY_GAME_SERIES_COUNT) Integer gameSeriesCount
  ) {
    this();
    this.id = id;
    this.slug = slug;
    this.name = name;
    this.nameOriginal = nameOriginal;
    this.description = description;
    this.metacritic = metacritic;
    this.metacriticPlatforms = metacriticPlatforms;
    this.released = released;
    this.tba = tba;
    this.updated = updated;
    this.backgroundImage = backgroundImage;
    this.backgroundImageAdditional = backgroundImageAdditional;
    this.website = website;
    this.ratingTop = ratingTop;
    this.ratings = ratings;
    this.reactions = reactions;
    this.added = added;
    this.addedByStatus = addedByStatus;
    this.playtime = playtime;
    this.screenshotsCount = screenshotsCount;
    this.moviesCount = moviesCount;
    this.creatorsCount = creatorsCount;
    this.achievementsCount = achievementsCount;
    this.parentAchievementsCount = parentAchievementsCount;
    this.redditUrl = redditUrl;
    this.redditName = redditName;
    this.redditDescription = redditDescription;
    this.redditLogo = redditLogo;
    this.redditCount = redditCount;
    this.twitchCount = twitchCount;
    this.youtubeCount = youtubeCount;
    this.reviewsTextCount = reviewsTextCount;
    this.ratingsCount = ratingsCount;
    this.suggestionsCount = suggestionsCount;
    this.alternativeNames = alternativeNames;
    this.metacriticUrl = metacriticUrl;
    this.parentsCount = parentsCount;
    this.additionsCount = additionsCount;
    this.gameSeriesCount = gameSeriesCount;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }




   /**
   * Get slug
   * @return slug
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SLUG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSlug() {
    return slug;
  }




   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }




   /**
   * Get nameOriginal
   * @return nameOriginal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME_ORIGINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNameOriginal() {
    return nameOriginal;
  }




   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }




   /**
   * Get metacritic
   * @return metacritic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_METACRITIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMetacritic() {
    return metacritic;
  }




   /**
   * Get metacriticPlatforms
   * @return metacriticPlatforms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_METACRITIC_PLATFORMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GamePlatformMetacritic> getMetacriticPlatforms() {
    return metacriticPlatforms;
  }




   /**
   * Get released
   * @return released
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RELEASED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getReleased() {
    return released;
  }




   /**
   * Get tba
   * @return tba
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TBA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTba() {
    return tba;
  }




   /**
   * Get updated
   * @return updated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdated() {
    return updated;
  }




   /**
   * Get backgroundImage
   * @return backgroundImage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BACKGROUND_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getBackgroundImage() {
    return backgroundImage;
  }




   /**
   * Get backgroundImageAdditional
   * @return backgroundImageAdditional
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BACKGROUND_IMAGE_ADDITIONAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBackgroundImageAdditional() {
    return backgroundImageAdditional;
  }




   /**
   * Get website
   * @return website
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WEBSITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getWebsite() {
    return website;
  }




  public GameSingle rating(BigDecimal rating) {
    
    this.rating = rating;
    return this;
  }

   /**
   * Get rating
   * @return rating
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RATING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getRating() {
    return rating;
  }


  @JsonProperty(JSON_PROPERTY_RATING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRating(BigDecimal rating) {
    this.rating = rating;
  }


   /**
   * Get ratingTop
   * @return ratingTop
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RATING_TOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRatingTop() {
    return ratingTop;
  }




   /**
   * Get ratings
   * @return ratings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RATINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getRatings() {
    return ratings;
  }




   /**
   * Get reactions
   * @return reactions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getReactions() {
    return reactions;
  }




   /**
   * Get added
   * @return added
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAdded() {
    return added;
  }




   /**
   * Get addedByStatus
   * @return addedByStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADDED_BY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getAddedByStatus() {
    return addedByStatus;
  }




   /**
   * in hours
   * @return playtime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "in hours")
  @JsonProperty(JSON_PROPERTY_PLAYTIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPlaytime() {
    return playtime;
  }




   /**
   * Get screenshotsCount
   * @return screenshotsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SCREENSHOTS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getScreenshotsCount() {
    return screenshotsCount;
  }




   /**
   * Get moviesCount
   * @return moviesCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MOVIES_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMoviesCount() {
    return moviesCount;
  }




   /**
   * Get creatorsCount
   * @return creatorsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CREATORS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCreatorsCount() {
    return creatorsCount;
  }




   /**
   * Get achievementsCount
   * @return achievementsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ACHIEVEMENTS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAchievementsCount() {
    return achievementsCount;
  }




   /**
   * Get parentAchievementsCount
   * @return parentAchievementsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PARENT_ACHIEVEMENTS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getParentAchievementsCount() {
    return parentAchievementsCount;
  }




   /**
   * For example \&quot;https://www.reddit.com/r/uncharted/\&quot; or \&quot;uncharted\&quot;
   * @return redditUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For example \"https://www.reddit.com/r/uncharted/\" or \"uncharted\"")
  @JsonProperty(JSON_PROPERTY_REDDIT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRedditUrl() {
    return redditUrl;
  }




   /**
   * Get redditName
   * @return redditName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REDDIT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRedditName() {
    return redditName;
  }




   /**
   * Get redditDescription
   * @return redditDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REDDIT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRedditDescription() {
    return redditDescription;
  }




   /**
   * Get redditLogo
   * @return redditLogo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REDDIT_LOGO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getRedditLogo() {
    return redditLogo;
  }




   /**
   * Get redditCount
   * @return redditCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REDDIT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRedditCount() {
    return redditCount;
  }




   /**
   * Get twitchCount
   * @return twitchCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TWITCH_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTwitchCount() {
    return twitchCount;
  }




   /**
   * Get youtubeCount
   * @return youtubeCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_YOUTUBE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getYoutubeCount() {
    return youtubeCount;
  }




   /**
   * Get reviewsTextCount
   * @return reviewsTextCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REVIEWS_TEXT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReviewsTextCount() {
    return reviewsTextCount;
  }




   /**
   * Get ratingsCount
   * @return ratingsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RATINGS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRatingsCount() {
    return ratingsCount;
  }




   /**
   * Get suggestionsCount
   * @return suggestionsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SUGGESTIONS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSuggestionsCount() {
    return suggestionsCount;
  }




   /**
   * Get alternativeNames
   * @return alternativeNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAlternativeNames() {
    return alternativeNames;
  }




   /**
   * For example \&quot;http://www.metacritic.com/game/playstation-4/the-witcher-3-wild-hunt\&quot;
   * @return metacriticUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For example \"http://www.metacritic.com/game/playstation-4/the-witcher-3-wild-hunt\"")
  @JsonProperty(JSON_PROPERTY_METACRITIC_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetacriticUrl() {
    return metacriticUrl;
  }




   /**
   * Get parentsCount
   * @return parentsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PARENTS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getParentsCount() {
    return parentsCount;
  }




   /**
   * Get additionsCount
   * @return additionsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADDITIONS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAdditionsCount() {
    return additionsCount;
  }




   /**
   * Get gameSeriesCount
   * @return gameSeriesCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GAME_SERIES_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getGameSeriesCount() {
    return gameSeriesCount;
  }




  public GameSingle esrbRating(GameEsrbRating esrbRating) {
    this.esrbRating = JsonNullable.<GameEsrbRating>of(esrbRating);
    
    return this;
  }

   /**
   * Get esrbRating
   * @return esrbRating
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public GameEsrbRating getEsrbRating() {
        return esrbRating.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ESRB_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<GameEsrbRating> getEsrbRating_JsonNullable() {
    return esrbRating;
  }
  
  @JsonProperty(JSON_PROPERTY_ESRB_RATING)
  public void setEsrbRating_JsonNullable(JsonNullable<GameEsrbRating> esrbRating) {
    this.esrbRating = esrbRating;
  }

  public void setEsrbRating(GameEsrbRating esrbRating) {
    this.esrbRating = JsonNullable.<GameEsrbRating>of(esrbRating);
  }


  public GameSingle platforms(List<GamePlatformsInner> platforms) {
    
    this.platforms = platforms;
    return this;
  }

  public GameSingle addPlatformsItem(GamePlatformsInner platformsItem) {
    if (this.platforms == null) {
      this.platforms = new ArrayList<>();
    }
    this.platforms.add(platformsItem);
    return this;
  }

   /**
   * Get platforms
   * @return platforms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PLATFORMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GamePlatformsInner> getPlatforms() {
    return platforms;
  }


  @JsonProperty(JSON_PROPERTY_PLATFORMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlatforms(List<GamePlatformsInner> platforms) {
    this.platforms = platforms;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GameSingle gameSingle = (GameSingle) o;
    return Objects.equals(this.id, gameSingle.id) &&
        Objects.equals(this.slug, gameSingle.slug) &&
        Objects.equals(this.name, gameSingle.name) &&
        Objects.equals(this.nameOriginal, gameSingle.nameOriginal) &&
        Objects.equals(this.description, gameSingle.description) &&
        Objects.equals(this.metacritic, gameSingle.metacritic) &&
        Objects.equals(this.metacriticPlatforms, gameSingle.metacriticPlatforms) &&
        Objects.equals(this.released, gameSingle.released) &&
        Objects.equals(this.tba, gameSingle.tba) &&
        Objects.equals(this.updated, gameSingle.updated) &&
        Objects.equals(this.backgroundImage, gameSingle.backgroundImage) &&
        Objects.equals(this.backgroundImageAdditional, gameSingle.backgroundImageAdditional) &&
        Objects.equals(this.website, gameSingle.website) &&
        Objects.equals(this.rating, gameSingle.rating) &&
        Objects.equals(this.ratingTop, gameSingle.ratingTop) &&
        Objects.equals(this.ratings, gameSingle.ratings) &&
        Objects.equals(this.reactions, gameSingle.reactions) &&
        Objects.equals(this.added, gameSingle.added) &&
        Objects.equals(this.addedByStatus, gameSingle.addedByStatus) &&
        Objects.equals(this.playtime, gameSingle.playtime) &&
        Objects.equals(this.screenshotsCount, gameSingle.screenshotsCount) &&
        Objects.equals(this.moviesCount, gameSingle.moviesCount) &&
        Objects.equals(this.creatorsCount, gameSingle.creatorsCount) &&
        Objects.equals(this.achievementsCount, gameSingle.achievementsCount) &&
        Objects.equals(this.parentAchievementsCount, gameSingle.parentAchievementsCount) &&
        Objects.equals(this.redditUrl, gameSingle.redditUrl) &&
        Objects.equals(this.redditName, gameSingle.redditName) &&
        Objects.equals(this.redditDescription, gameSingle.redditDescription) &&
        Objects.equals(this.redditLogo, gameSingle.redditLogo) &&
        Objects.equals(this.redditCount, gameSingle.redditCount) &&
        Objects.equals(this.twitchCount, gameSingle.twitchCount) &&
        Objects.equals(this.youtubeCount, gameSingle.youtubeCount) &&
        Objects.equals(this.reviewsTextCount, gameSingle.reviewsTextCount) &&
        Objects.equals(this.ratingsCount, gameSingle.ratingsCount) &&
        Objects.equals(this.suggestionsCount, gameSingle.suggestionsCount) &&
        Objects.equals(this.alternativeNames, gameSingle.alternativeNames) &&
        Objects.equals(this.metacriticUrl, gameSingle.metacriticUrl) &&
        Objects.equals(this.parentsCount, gameSingle.parentsCount) &&
        Objects.equals(this.additionsCount, gameSingle.additionsCount) &&
        Objects.equals(this.gameSeriesCount, gameSingle.gameSeriesCount) &&
        equalsNullable(this.esrbRating, gameSingle.esrbRating) &&
        Objects.equals(this.platforms, gameSingle.platforms);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, slug, name, nameOriginal, description, metacritic, metacriticPlatforms, released, tba, updated, backgroundImage, backgroundImageAdditional, website, rating, ratingTop, ratings, reactions, added, addedByStatus, playtime, screenshotsCount, moviesCount, creatorsCount, achievementsCount, parentAchievementsCount, redditUrl, redditName, redditDescription, redditLogo, redditCount, twitchCount, youtubeCount, reviewsTextCount, ratingsCount, suggestionsCount, alternativeNames, metacriticUrl, parentsCount, additionsCount, gameSeriesCount, hashCodeNullable(esrbRating), platforms);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GameSingle {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameOriginal: ").append(toIndentedString(nameOriginal)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    metacritic: ").append(toIndentedString(metacritic)).append("\n");
    sb.append("    metacriticPlatforms: ").append(toIndentedString(metacriticPlatforms)).append("\n");
    sb.append("    released: ").append(toIndentedString(released)).append("\n");
    sb.append("    tba: ").append(toIndentedString(tba)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    backgroundImage: ").append(toIndentedString(backgroundImage)).append("\n");
    sb.append("    backgroundImageAdditional: ").append(toIndentedString(backgroundImageAdditional)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    ratingTop: ").append(toIndentedString(ratingTop)).append("\n");
    sb.append("    ratings: ").append(toIndentedString(ratings)).append("\n");
    sb.append("    reactions: ").append(toIndentedString(reactions)).append("\n");
    sb.append("    added: ").append(toIndentedString(added)).append("\n");
    sb.append("    addedByStatus: ").append(toIndentedString(addedByStatus)).append("\n");
    sb.append("    playtime: ").append(toIndentedString(playtime)).append("\n");
    sb.append("    screenshotsCount: ").append(toIndentedString(screenshotsCount)).append("\n");
    sb.append("    moviesCount: ").append(toIndentedString(moviesCount)).append("\n");
    sb.append("    creatorsCount: ").append(toIndentedString(creatorsCount)).append("\n");
    sb.append("    achievementsCount: ").append(toIndentedString(achievementsCount)).append("\n");
    sb.append("    parentAchievementsCount: ").append(toIndentedString(parentAchievementsCount)).append("\n");
    sb.append("    redditUrl: ").append(toIndentedString(redditUrl)).append("\n");
    sb.append("    redditName: ").append(toIndentedString(redditName)).append("\n");
    sb.append("    redditDescription: ").append(toIndentedString(redditDescription)).append("\n");
    sb.append("    redditLogo: ").append(toIndentedString(redditLogo)).append("\n");
    sb.append("    redditCount: ").append(toIndentedString(redditCount)).append("\n");
    sb.append("    twitchCount: ").append(toIndentedString(twitchCount)).append("\n");
    sb.append("    youtubeCount: ").append(toIndentedString(youtubeCount)).append("\n");
    sb.append("    reviewsTextCount: ").append(toIndentedString(reviewsTextCount)).append("\n");
    sb.append("    ratingsCount: ").append(toIndentedString(ratingsCount)).append("\n");
    sb.append("    suggestionsCount: ").append(toIndentedString(suggestionsCount)).append("\n");
    sb.append("    alternativeNames: ").append(toIndentedString(alternativeNames)).append("\n");
    sb.append("    metacriticUrl: ").append(toIndentedString(metacriticUrl)).append("\n");
    sb.append("    parentsCount: ").append(toIndentedString(parentsCount)).append("\n");
    sb.append("    additionsCount: ").append(toIndentedString(additionsCount)).append("\n");
    sb.append("    gameSeriesCount: ").append(toIndentedString(gameSeriesCount)).append("\n");
    sb.append("    esrbRating: ").append(toIndentedString(esrbRating)).append("\n");
    sb.append("    platforms: ").append(toIndentedString(platforms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

