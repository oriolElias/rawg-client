/*
 * RAWG Video Games Database API
 *  The largest open video games database.  ### Why build on RAWG - More than 350,000 games for 50 platforms including mobiles. - Rich metadata: tags, genres, developers, publishers, individual creators, official websites, release dates, Metacritic ratings. - Where to buy: links to digital distribution services - Similar games based on visual similarity. - Player activity data: Steam average playtime and RAWG player counts and ratings. - Actively developing and constantly getting better by user contribution and our algorithms.  ### Terms of Use - Free for personal use as long as you attribute RAWG as the source of the data and/or images and add an active hyperlink from every page where the data of RAWG is used. - Free for commercial use for startups and hobby projects with not more than 100,000 monthly active users or 500,000 page views per month. If your project is larger than that, email us at [api@rawg.io](mailto:api@rawg.io) for commercial terms. - No cloning. It would not be cool if you used our API to launch a clone of RAWG. We know it is not always easy to say what is a duplicate and what isn't. Drop us a line at [api@rawg.io](mailto:api@rawg.io) if you are in doubt, and we will talk it through. - You must include an API key with every request. The key can be obtained at https://rawg.io/apidocs. If you donâ€™t provide it, we may ban your requests.  __[Read more](https://rawg.io/apidocs)__. 
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Youtube
 */
@JsonPropertyOrder({
  Youtube.JSON_PROPERTY_ID,
  Youtube.JSON_PROPERTY_EXTERNAL_ID,
  Youtube.JSON_PROPERTY_CHANNEL_ID,
  Youtube.JSON_PROPERTY_CHANNEL_TITLE,
  Youtube.JSON_PROPERTY_NAME,
  Youtube.JSON_PROPERTY_DESCRIPTION,
  Youtube.JSON_PROPERTY_CREATED,
  Youtube.JSON_PROPERTY_VIEW_COUNT,
  Youtube.JSON_PROPERTY_COMMENTS_COUNT,
  Youtube.JSON_PROPERTY_LIKE_COUNT,
  Youtube.JSON_PROPERTY_DISLIKE_COUNT,
  Youtube.JSON_PROPERTY_FAVORITE_COUNT,
  Youtube.JSON_PROPERTY_THUMBNAILS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-16T10:31:14.408Z[UTC]")
public class Youtube {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_EXTERNAL_ID = "external_id";
  private String externalId;

  public static final String JSON_PROPERTY_CHANNEL_ID = "channel_id";
  private String channelId;

  public static final String JSON_PROPERTY_CHANNEL_TITLE = "channel_title";
  private String channelTitle;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_CREATED = "created";
  private OffsetDateTime created;

  public static final String JSON_PROPERTY_VIEW_COUNT = "view_count";
  private Integer viewCount;

  public static final String JSON_PROPERTY_COMMENTS_COUNT = "comments_count";
  private Integer commentsCount;

  public static final String JSON_PROPERTY_LIKE_COUNT = "like_count";
  private Integer likeCount;

  public static final String JSON_PROPERTY_DISLIKE_COUNT = "dislike_count";
  private Integer dislikeCount;

  public static final String JSON_PROPERTY_FAVORITE_COUNT = "favorite_count";
  private Integer favoriteCount;

  public static final String JSON_PROPERTY_THUMBNAILS = "thumbnails";
  private Object thumbnails;

  public Youtube() {
  }

  @JsonCreator
  public Youtube(
    @JsonProperty(JSON_PROPERTY_ID) Integer id, 
    @JsonProperty(JSON_PROPERTY_EXTERNAL_ID) String externalId, 
    @JsonProperty(JSON_PROPERTY_CHANNEL_ID) String channelId, 
    @JsonProperty(JSON_PROPERTY_CHANNEL_TITLE) String channelTitle, 
    @JsonProperty(JSON_PROPERTY_NAME) String name, 
    @JsonProperty(JSON_PROPERTY_DESCRIPTION) String description, 
    @JsonProperty(JSON_PROPERTY_CREATED) OffsetDateTime created, 
    @JsonProperty(JSON_PROPERTY_VIEW_COUNT) Integer viewCount, 
    @JsonProperty(JSON_PROPERTY_COMMENTS_COUNT) Integer commentsCount, 
    @JsonProperty(JSON_PROPERTY_LIKE_COUNT) Integer likeCount, 
    @JsonProperty(JSON_PROPERTY_DISLIKE_COUNT) Integer dislikeCount, 
    @JsonProperty(JSON_PROPERTY_FAVORITE_COUNT) Integer favoriteCount, 
    @JsonProperty(JSON_PROPERTY_THUMBNAILS) Object thumbnails
  ) {
    this();
    this.id = id;
    this.externalId = externalId;
    this.channelId = channelId;
    this.channelTitle = channelTitle;
    this.name = name;
    this.description = description;
    this.created = created;
    this.viewCount = viewCount;
    this.commentsCount = commentsCount;
    this.likeCount = likeCount;
    this.dislikeCount = dislikeCount;
    this.favoriteCount = favoriteCount;
    this.thumbnails = thumbnails;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }




   /**
   * Get externalId
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalId() {
    return externalId;
  }




   /**
   * Get channelId
   * @return channelId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChannelId() {
    return channelId;
  }




   /**
   * Get channelTitle
   * @return channelTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CHANNEL_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChannelTitle() {
    return channelTitle;
  }




   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }




   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }




   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreated() {
    return created;
  }




   /**
   * Get viewCount
   * @return viewCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VIEW_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getViewCount() {
    return viewCount;
  }




   /**
   * Get commentsCount
   * @return commentsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMMENTS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCommentsCount() {
    return commentsCount;
  }




   /**
   * Get likeCount
   * @return likeCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LIKE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLikeCount() {
    return likeCount;
  }




   /**
   * Get dislikeCount
   * @return dislikeCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISLIKE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDislikeCount() {
    return dislikeCount;
  }




   /**
   * Get favoriteCount
   * @return favoriteCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FAVORITE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFavoriteCount() {
    return favoriteCount;
  }




   /**
   * Get thumbnails
   * @return thumbnails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_THUMBNAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getThumbnails() {
    return thumbnails;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Youtube youtube = (Youtube) o;
    return Objects.equals(this.id, youtube.id) &&
        Objects.equals(this.externalId, youtube.externalId) &&
        Objects.equals(this.channelId, youtube.channelId) &&
        Objects.equals(this.channelTitle, youtube.channelTitle) &&
        Objects.equals(this.name, youtube.name) &&
        Objects.equals(this.description, youtube.description) &&
        Objects.equals(this.created, youtube.created) &&
        Objects.equals(this.viewCount, youtube.viewCount) &&
        Objects.equals(this.commentsCount, youtube.commentsCount) &&
        Objects.equals(this.likeCount, youtube.likeCount) &&
        Objects.equals(this.dislikeCount, youtube.dislikeCount) &&
        Objects.equals(this.favoriteCount, youtube.favoriteCount) &&
        Objects.equals(this.thumbnails, youtube.thumbnails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, externalId, channelId, channelTitle, name, description, created, viewCount, commentsCount, likeCount, dislikeCount, favoriteCount, thumbnails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Youtube {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    channelTitle: ").append(toIndentedString(channelTitle)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    viewCount: ").append(toIndentedString(viewCount)).append("\n");
    sb.append("    commentsCount: ").append(toIndentedString(commentsCount)).append("\n");
    sb.append("    likeCount: ").append(toIndentedString(likeCount)).append("\n");
    sb.append("    dislikeCount: ").append(toIndentedString(dislikeCount)).append("\n");
    sb.append("    favoriteCount: ").append(toIndentedString(favoriteCount)).append("\n");
    sb.append("    thumbnails: ").append(toIndentedString(thumbnails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

